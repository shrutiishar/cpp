//union and intersection
#include<iostream>
#include<stdlib.h>
#define MAX 5
#define max 5
using namespace std;
void findunion(int[],int[]);
void intersection(int[],int[]);
int main()
{
    int arr[MAX];
    int arr1[max];
    int ch;
    for(int i=0;i<MAX;i++)
    {
        cout<<"enter value for array";
        cin>>arr[i];
    }
    for(int i=0;i<max;i++)
    {
        cout<<"enter value for array 2";
        cin>>arr1[i];
    }
    
    
    do{
        scanf("%d",&ch);
        switch(ch){
            case 1:
                findunion(arr,arr1);
                break;
            case 2:
                intersection(arr,arr1);
                break;
            case 0:
                exit(0);
                break;
                
        }
    }while(ch!=0);
    return 0;
}
void findunion(int arr[],int arr1[])
{
    int arr2[max+MAX];
    int k=0;
    for(int i=0;i<MAX;i++)
    {
        arr2[k++]=arr[i];
    }
    for(int i=0;i<max;i++)
    {
        int flag=0;
        for(int j=0;j<k;j++)
        {
            if(arr2[j]==arr1[i])
            {
                flag = 1;
                break;
            }
        }
        if(!flag)
        {
            arr2[k++]=arr1[i];
        }
    }
    for(int i=0;i<k;i++)
    {
        cout<<arr2[i];
    }
}
void intersection(int arr[],int arr1[])
{
    int arr2[max+MAX];
    int k=0;
    for(int i=0;i<MAX;i++)
    {
        for(int j=0;j<max;j++)
        {
            if(arr[i]==arr1[j]){
                int flag=0;
            for(int m=0;m<k;m++)
            {
                if(arr2[m]==arr[i])
                {
                    flag=1;
                    break;
                }
            }
        
        if(!flag)
        {
            arr2[k++]=arr[i];
        }
    }}}
    for(int i=0;i<k;i++)
    {
        printf("%d",arr2[i]);
    }
}
